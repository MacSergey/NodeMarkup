//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NodeMarkup {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localize {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localize() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NodeMarkup.Properties.Localize", typeof(Localize).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete {0}.
        /// </summary>
        public static string Editor_DeleteCaption {
            get {
                return ResourceManager.GetString("Editor_DeleteCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to delete {0} {1}?
        ///This action cannot be undone.
        /// </summary>
        public static string Editor_DeleteMessage {
            get {
                return ResourceManager.GetString("Editor_DeleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scroll the wheel to change.
        /// </summary>
        public static string FieldPanel_ScrollWheel {
            get {
                return ResourceManager.GetString("FieldPanel_ScrollWheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply template.
        /// </summary>
        public static string HeaderPanel_ApplyTemplate {
            get {
                return ResourceManager.GetString("HeaderPanel_ApplyTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save as template.
        /// </summary>
        public static string HeaderPanel_SaveAsTemplate {
            get {
                return ResourceManager.GetString("HeaderPanel_SaveAsTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set as default.
        /// </summary>
        public static string HeaderPanel_SetAsDefault {
            get {
                return ResourceManager.GetString("HeaderPanel_SetAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unset as default.
        /// </summary>
        public static string HeaderPanel_UnsetAsDefault {
            get {
                return ResourceManager.GetString("HeaderPanel_UnsetAsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Rule.
        /// </summary>
        public static string LineEditor_AddRuleButton {
            get {
                return ResourceManager.GetString("LineEditor_AddRuleButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Color.
        /// </summary>
        public static string LineEditor_Color {
            get {
                return ResourceManager.GetString("LineEditor_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dash length.
        /// </summary>
        public static string LineEditor_DashedLength {
            get {
                return ResourceManager.GetString("LineEditor_DashedLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete rule.
        /// </summary>
        public static string LineEditor_DeleteRuleCaption {
            get {
                return ResourceManager.GetString("LineEditor_DeleteRuleCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to delete the rule?
        ///This action cannot be undone.
        /// </summary>
        public static string LineEditor_DeleteRuleMessage {
            get {
                return ResourceManager.GetString("LineEditor_DeleteRuleMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на From.
        /// </summary>
        public static string LineEditor_From {
            get {
                return ResourceManager.GetString("LineEditor_From", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the rule&apos;s &quot;From&quot; point.
        /// </summary>
        public static string LineEditor_InfoSelectFrom {
            get {
                return ResourceManager.GetString("LineEditor_InfoSelectFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the rule&apos;s &quot;To&quot; point.
        /// </summary>
        public static string LineEditor_InfoSelectTo {
            get {
                return ResourceManager.GetString("LineEditor_InfoSelectTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invert.
        /// </summary>
        public static string LineEditor_Invert {
            get {
                return ResourceManager.GetString("LineEditor_Invert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на line.
        /// </summary>
        public static string LineEditor_ItemDescription {
            get {
                return ResourceManager.GetString("LineEditor_ItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lines.
        /// </summary>
        public static string LineEditor_Lines {
            get {
                return ResourceManager.GetString("LineEditor_Lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Offset.
        /// </summary>
        public static string LineEditor_Offset {
            get {
                return ResourceManager.GetString("LineEditor_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Space length.
        /// </summary>
        public static string LineEditor_SpaceLength {
            get {
                return ResourceManager.GetString("LineEditor_SpaceLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Style.
        /// </summary>
        public static string LineEditor_Style {
            get {
                return ResourceManager.GetString("LineEditor_Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To.
        /// </summary>
        public static string LineEditor_To {
            get {
                return ResourceManager.GetString("LineEditor_To", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Width.
        /// </summary>
        public static string LineEditor_Width {
            get {
                return ResourceManager.GetString("LineEditor_Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Intersection with {0}.
        /// </summary>
        public static string LineRule_IntersectWith {
            get {
                return ResourceManager.GetString("LineRule_IntersectWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Self-edge point {0}.
        /// </summary>
        public static string LineRule_SelfEdgePoint {
            get {
                return ResourceManager.GetString("LineRule_SelfEdgePoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dashed.
        /// </summary>
        public static string LineStyle_Dashed {
            get {
                return ResourceManager.GetString("LineStyle_Dashed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на D.
        /// </summary>
        public static string LineStyle_DashedShort {
            get {
                return ResourceManager.GetString("LineStyle_DashedShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Double dashed.
        /// </summary>
        public static string LineStyle_DoubleDashed {
            get {
                return ResourceManager.GetString("LineStyle_DoubleDashed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DD.
        /// </summary>
        public static string LineStyle_DoubleDashedShort {
            get {
                return ResourceManager.GetString("LineStyle_DoubleDashedShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Double solid.
        /// </summary>
        public static string LineStyle_DoubleSolid {
            get {
                return ResourceManager.GetString("LineStyle_DoubleSolid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DS.
        /// </summary>
        public static string LineStyle_DoubleSolidShort {
            get {
                return ResourceManager.GetString("LineStyle_DoubleSolidShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Solid.
        /// </summary>
        public static string LineStyle_Solid {
            get {
                return ResourceManager.GetString("LineStyle_Solid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Solid and Dashed.
        /// </summary>
        public static string LineStyle_SolidAndDashed {
            get {
                return ResourceManager.GetString("LineStyle_SolidAndDashed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SD.
        /// </summary>
        public static string LineStyle_SolidAndDashedShort {
            get {
                return ResourceManager.GetString("LineStyle_SolidAndDashedShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на S.
        /// </summary>
        public static string LineStyle_SolidShort {
            get {
                return ResourceManager.GetString("LineStyle_SolidShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        public static string MessageBox_No {
            get {
                return ResourceManager.GetString("MessageBox_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string MessageBox_OK {
            get {
                return ResourceManager.GetString("MessageBox_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes.
        /// </summary>
        public static string MessageBox_Yes {
            get {
                return ResourceManager.GetString("MessageBox_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Just do make markings at intersections.
        /// </summary>
        public static string Mod_Description {
            get {
                return ResourceManager.GetString("Mod_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This is a BETA version, errors may occur and stability is not guaranteed!.
        /// </summary>
        public static string Mod_DescriptionBeta {
            get {
                return ResourceManager.GetString("Mod_DescriptionBeta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на What`s new in {0}.
        /// </summary>
        public static string Mod_WhatsNewCaption {
            get {
                return ResourceManager.GetString("Mod_WhatsNewCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - Copy with MoveIt
        ///- New &quot;Solid and Dashed&quot; style
        ///- Chinese.
        /// </summary>
        public static string Mod_WhatsNewMessage {
            get {
                return ResourceManager.GetString("Mod_WhatsNewMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit node #{0} marking.
        /// </summary>
        public static string Panel_Caption {
            get {
                return ResourceManager.GetString("Panel_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на point.
        /// </summary>
        public static string PointEditor_ItemDescription {
            get {
                return ResourceManager.GetString("PointEditor_ItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Offset.
        /// </summary>
        public static string PointEditor_Offset {
            get {
                return ResourceManager.GetString("PointEditor_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Points.
        /// </summary>
        public static string PointEditor_Points {
            get {
                return ResourceManager.GetString("PointEditor_Points", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not set.
        /// </summary>
        public static string SelectPanel_NotSet {
            get {
                return ResourceManager.GetString("SelectPanel_NotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string Setting_Cancel {
            get {
                return ResourceManager.GetString("Setting_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activate tool.
        /// </summary>
        public static string Settings_ActivateTool {
            get {
                return ResourceManager.GetString("Settings_ActivateTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add new line rule.
        /// </summary>
        public static string Settings_AddNewLineRule {
            get {
                return ResourceManager.GetString("Settings_AddNewLineRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete all node lines.
        /// </summary>
        public static string Settings_DeleteAllNodeLines {
            get {
                return ResourceManager.GetString("Settings_DeleteAllNodeLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete marking from all intersections.
        /// </summary>
        public static string Settings_DeleteMarkingButton {
            get {
                return ResourceManager.GetString("Settings_DeleteMarkingButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete all markings.
        /// </summary>
        public static string Settings_DeleteMarkingCaption {
            get {
                return ResourceManager.GetString("Settings_DeleteMarkingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to remove all markings?
        ///This action cannot be undone.
        /// </summary>
        public static string Settings_DeleteMarkingMessage {
            get {
                return ResourceManager.GetString("Settings_DeleteMarkingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dump marking data to file.
        /// </summary>
        public static string Settings_DumpMarkingButton {
            get {
                return ResourceManager.GetString("Settings_DumpMarkingButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy path to clipboard.
        /// </summary>
        public static string Settings_DumpMarkingButton1 {
            get {
                return ResourceManager.GetString("Settings_DumpMarkingButton1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string Settings_DumpMarkingButton2 {
            get {
                return ResourceManager.GetString("Settings_DumpMarkingButton2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dump marking data.
        /// </summary>
        public static string Settings_DumpMarkingCaption {
            get {
                return ResourceManager.GetString("Settings_DumpMarkingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dump failed.
        /// </summary>
        public static string Settings_DumpMarkingMessageFailed {
            get {
                return ResourceManager.GetString("Settings_DumpMarkingMessageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dump success saved.
        /// </summary>
        public static string Settings_DumpMarkingMessageSuccess {
            get {
                return ResourceManager.GetString("Settings_DumpMarkingMessageSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        public static string Settings_General {
            get {
                return ResourceManager.GetString("Settings_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import.
        /// </summary>
        public static string Settings_Import {
            get {
                return ResourceManager.GetString("Settings_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import marking data from file.
        /// </summary>
        public static string Settings_ImportMarkingButton {
            get {
                return ResourceManager.GetString("Settings_ImportMarkingButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import marking data.
        /// </summary>
        public static string Settings_ImportMarkingCaption {
            get {
                return ResourceManager.GetString("Settings_ImportMarkingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to import data?
        ///The imported data will replace all existing markup.
        ///This action cannot be undone.
        /// </summary>
        public static string Settings_ImportMarkingMessage {
            get {
                return ResourceManager.GetString("Settings_ImportMarkingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Marking data import failed.
        /// </summary>
        public static string Settings_ImportMarkingMessageFailed {
            get {
                return ResourceManager.GetString("Settings_ImportMarkingMessageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Marking data successfully imported.
        /// </summary>
        public static string Settings_ImportMarkingMessageSuccess {
            get {
                return ResourceManager.GetString("Settings_ImportMarkingMessageSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other.
        /// </summary>
        public static string Settings_Other {
            get {
                return ResourceManager.GetString("Settings_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick rule setup.
        /// </summary>
        public static string Settings_QuickRuleSetup {
            get {
                return ResourceManager.GetString("Settings_QuickRuleSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Render distance.
        /// </summary>
        public static string Settings_RenderDistance {
            get {
                return ResourceManager.GetString("Settings_RenderDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Shortcuts.
        /// </summary>
        public static string Settings_Shortcuts {
            get {
                return ResourceManager.GetString("Settings_Shortcuts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm before deleting.
        /// </summary>
        public static string Settings_ShowDeleteWarnings {
            get {
                return ResourceManager.GetString("Settings_ShowDeleteWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show tooltips.
        /// </summary>
        public static string Settings_ShowTooltips {
            get {
                return ResourceManager.GetString("Settings_ShowTooltips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show what`s new.
        /// </summary>
        public static string Settings_ShowWhatsNew {
            get {
                return ResourceManager.GetString("Settings_ShowWhatsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New template.
        /// </summary>
        public static string Template_NewTemplate {
            get {
                return ResourceManager.GetString("Template_NewTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Color.
        /// </summary>
        public static string TemplateEditor_Color {
            get {
                return ResourceManager.GetString("TemplateEditor_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dash length.
        /// </summary>
        public static string TemplateEditor_DashedLength {
            get {
                return ResourceManager.GetString("TemplateEditor_DashedLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invert.
        /// </summary>
        public static string TemplateEditor_Invert {
            get {
                return ResourceManager.GetString("TemplateEditor_Invert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на template.
        /// </summary>
        public static string TemplateEditor_ItemDescription {
            get {
                return ResourceManager.GetString("TemplateEditor_ItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        public static string TemplateEditor_Name {
            get {
                return ResourceManager.GetString("TemplateEditor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Offset.
        /// </summary>
        public static string TemplateEditor_Offset {
            get {
                return ResourceManager.GetString("TemplateEditor_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Space length.
        /// </summary>
        public static string TemplateEditor_SpaceLength {
            get {
                return ResourceManager.GetString("TemplateEditor_SpaceLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Style.
        /// </summary>
        public static string TemplateEditor_Style {
            get {
                return ResourceManager.GetString("TemplateEditor_Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Templates.
        /// </summary>
        public static string TemplateEditor_Templates {
            get {
                return ResourceManager.GetString("TemplateEditor_Templates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Width.
        /// </summary>
        public static string TemplateEditor_Width {
            get {
                return ResourceManager.GetString("TemplateEditor_Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear node markings.
        /// </summary>
        public static string Tool_ClearMarkingsCaption {
            get {
                return ResourceManager.GetString("Tool_ClearMarkingsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to clear all node #{0} markings?
        ///This action cannot be undone.
        /// </summary>
        public static string Tool_ClearMarkingsMessage {
            get {
                return ResourceManager.GetString("Tool_ClearMarkingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to create a line
        ///+Shift - Solid
        ///+Ctrl - Double.
        /// </summary>
        public static string Tool_InfoCreateLine {
            get {
                return ResourceManager.GetString("Tool_InfoCreateLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to delete the line.
        /// </summary>
        public static string Tool_InfoDeleteLine {
            get {
                return ResourceManager.GetString("Tool_InfoDeleteLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Node #{0}
        ///Click to edit marking.
        /// </summary>
        public static string Tool_InfoHoverNode {
            get {
                return ResourceManager.GetString("Tool_InfoHoverNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a node to change marking.
        /// </summary>
        public static string Tool_InfoNode {
            get {
                return ResourceManager.GetString("Tool_InfoNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select endpoint
        ///+Shift - Solid
        ///+Ctrl - Double.
        /// </summary>
        public static string Tool_InfoSelectEndPoint {
            get {
                return ResourceManager.GetString("Tool_InfoSelectEndPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a point to
        ///create or delete a line
        ///+Ctrl to move the point
        ///+Shift to edit the point.
        /// </summary>
        public static string Tool_InfoSelectStartPoint {
            get {
                return ResourceManager.GetString("Tool_InfoSelectStartPoint", resourceCulture);
            }
        }
    }
}
