<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Tool_DeleteCaption" xml:space="preserve">
    <value>Delete {0}</value>
  </data>
  <data name="Tool_DeleteMessage" xml:space="preserve">
    <value>Are you sure you want to delete {0} "{1}"?</value>
  </data>
  <data name="HeaderPanel_ApplyTemplate" xml:space="preserve">
    <value>Apply template</value>
  </data>
  <data name="HeaderPanel_SaveAsTemplate" xml:space="preserve">
    <value>Save as template</value>
  </data>
  <data name="HeaderPanel_SetAsDefault" xml:space="preserve">
    <value>Set as default</value>
  </data>
  <data name="HeaderPanel_UnsetAsDefault" xml:space="preserve">
    <value>Remove from default</value>
  </data>
  <data name="LineEditor_AddRuleButton" xml:space="preserve">
    <value>Add rule</value>
  </data>
  <data name="StyleOption_Color" xml:space="preserve">
    <value>Colour</value>
  </data>
  <data name="LineEditor_DeleteRuleCaption" xml:space="preserve">
    <value>Delete rule</value>
  </data>
  <data name="LineEditor_DeleteRuleMessage" xml:space="preserve">
    <value>Are you sure you want to delete the rule?</value>
  </data>
  <data name="LineRule_From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="LineEditor_InfoSelectFrom" xml:space="preserve">
    <value>Select the rule's from point</value>
  </data>
  <data name="LineEditor_InfoSelectTo" xml:space="preserve">
    <value>Select the rule's "To" point</value>
  </data>
  <data name="LineEditor_DeleteCaptionDescription" xml:space="preserve">
    <value>line</value>
  </data>
  <data name="LineEditor_Lines" xml:space="preserve">
    <value>Lines</value>
  </data>
  <data name="StyleOption_Offset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="Editor_Style" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="LineRule_To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="LineRule_IntersectWith" xml:space="preserve">
    <value>Intersection with {0}</value>
  </data>
  <data name="TemplateEditor_EmptyMessage" xml:space="preserve">
    <value>The list of templates is empty.
To create a template, click «{0}» at the line or pedestrian crossing or filler style.</value>
  </data>
  <data name="CrosswalkStyle_Existent" xml:space="preserve">
    <value>Existing pedestrian crossing</value>
  </data>
  <data name="CrosswalkEditor_Crosswalks" xml:space="preserve">
    <value>Pedestrian Crossings</value>
  </data>
  <data name="CrosswalkEditor_EmptyMessage" xml:space="preserve">
    <value>There are no crossings at this intersection yet.
To create a pedestrian crossing hold {0}.</value>
  </data>
  <data name="CrossWalkEditor_DeleteCaptionDescription" xml:space="preserve">
    <value>pedestrian crossing</value>
  </data>
  <data name="CrosswalkStyle_Group" xml:space="preserve">
    <value>Pedestrian crossings</value>
  </data>
  <data name="Tool_InfoCreateCrosswalk" xml:space="preserve">
    <value>Click to create a pedestrian crossing</value>
  </data>
  <data name="Tool_InfoDeleteCrosswalk" xml:space="preserve">
    <value>Click to delete the pedestrian crossing</value>
  </data>
  <data name="CrosswalkEditor_InfoSelectLeftBorder" xml:space="preserve">
    <value>Select the pedestrian crossing's left border</value>
  </data>
  <data name="CrosswalkEditor_InfoSelectRightBorder" xml:space="preserve">
    <value>Select the pedestrian crossing's right border</value>
  </data>
  <data name="LineRule_LeftBorder" xml:space="preserve">
    <value>Pedestrian crossing's left border</value>
  </data>
  <data name="LineRule_RightBorder" xml:space="preserve">
    <value>Pedestrian crossing's right border</value>
  </data>
  <data name="Tool_InfoSelectCrosswalkStartPoint" xml:space="preserve">
    <value>Select a point to
create or delete a pedestrian crossing</value>
  </data>
  <data name="LineStyle_CrosswalkLinesGroup" xml:space="preserve">
    <value>Pedestrian crossing lines</value>
  </data>
  <data name="CrossWalkEditor_DeleteMessageDescription" xml:space="preserve">
    <value>pedestrian crossing</value>
  </data>
  <data name="Settings_CrosswalksModifier" xml:space="preserve">
    <value>Pedestrian crossings modifier</value>
  </data>
  <data name="Tool_DeleteDependenceCrosswalkBorders" xml:space="preserve">
    <value>Pedestrian Crossing Borders - {0}</value>
  </data>
  <data name="Tool_DeleteDependenceCrosswalks" xml:space="preserve">
    <value>Pedestrian Crossings - {0}</value>
  </data>
  <data name="Tool_InfoTurnСounterClockwise" xml:space="preserve">
    <value>Turn anti-clockwise</value>
  </data>
  <data name="StyleOption_AlignmentCenter" xml:space="preserve">
    <value>Centre</value>
  </data>
  <data name="StyleOption_SolidInCenter" xml:space="preserve">
    <value>Solid in centre</value>
  </data>
  <data name="Tool_InfoStartCreateCrosswalk" xml:space="preserve">
    <value>Hold {0} to create a pedestrian crossing</value>
  </data>
  <data name="Settings_QuickBorderSetup" xml:space="preserve">
    <value>Quick pedestrian crossing borders setup</value>
  </data>
  <data name="PresetInfo_Crosswalks" xml:space="preserve">
    <value>Pedestrian
crossings:</value>
  </data>
  <data name="Settings_CutLineByCrosswalk" xml:space="preserve">
    <value>Cut new line by pedestrian crossings</value>
  </data>
  <data name="HeaderPanel_CutLinesByCrosswalk" xml:space="preserve">
    <value>Cut lines by this pedestrian crossing</value>
  </data>
  <data name="Settings_ShortcutCutLinesByCrosswalks" xml:space="preserve">
    <value>Cut lines by all pedestrian crossings</value>
  </data>
  <data name="Panel_CutLinesByCrosswalks" xml:space="preserve">
    <value>Cut lines by all pedestrian crossings</value>
  </data>
  <data name="CrosswalkEditor_BordersWarning" xml:space="preserve">
    <value>To be able to set the pedestrian crossing borders, you must have lines started from the same points as the crossing</value>
  </data>
  <data name="Settings_DontCutBorderByCrosswalk" xml:space="preserve">
    <value>Don't cut line by pedestrian crossing if it is their border</value>
  </data>
  <data name="Tool_InfoSelectCrosswalk" xml:space="preserve">
    <value>Click with {0} to select the pedestrian crossing</value>
  </data>
  <data name="StyleOption_ColorOption" xml:space="preserve">
    <value>Colour variant</value>
  </data>
  <data name="StyleOption_MainColor" xml:space="preserve">
    <value>Main colour</value>
  </data>
  <data name="StyleOption_SecondColor" xml:space="preserve">
    <value>Second colour</value>
  </data>
</root>